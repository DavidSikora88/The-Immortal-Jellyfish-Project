
Mood
    Mood
    Mindfulness
    Daily note
    Affirmations

Sleep
    Time asleep
    Time in bed
    Bedtime
    Wake time
    Awakenings

Food
    Energy in
    Alcoholic drinks
    Coffees
    Water
    Carbohydrates
    Fat
    Fibre
    Protein
    Sodium
    Sugar
    Caffeine
    Cholesterol

Twitter
    Tweets
    Twitter mentions

Activity
    Steps
    Active minutes
    Floors
    Elevation
    Active energy burned
    Cycle distance
    Cycle time

Workouts
    Workouts
    Workout distance
    Workout time

Finance
    Money spent

Location
    Check-ins

Media
    Tracks played
    Articles read
    Words read in articles
    Time gaming
    Pages read
    Books read
    Time watching TV

Weather
    Max temp
    Min temp
    Precipitation
    Air pressure
    Cloud cover
    Humidity
    Wind speed
    Day length
    Sunrise
    Sunset
    Weather summary
    Pollen

Productivity
    Productive time
    Distracting time
    Commits
    Keystrokes
    Tasks completed
    Words written
    Emails received
    Emails sent
    Mobile screen time

Events
    Events
    Time in events

Health
    Weight
    Body fat
    Lean mass
    Time meditating
    Average heartrate
    Max heartrate
    Resting heartrate
    HRV
    Sexual activity
    Resting breathing rate

Social
    Instagram posts
    Instagram likes
    Instagram comments
    Facebook posts
    Facebook reactions
    Facebook comments

Air Quality
    Outdoor air Quality
    Indoor air Quality

Python Tracking Implementation Ideas
Mood
    - Build a Flask or FastAPI service to accept daily mood ratings and mindfulness logs.
    - Store notes and affirmations in a SQLite or PostgreSQL database with SQLAlchemy.
Sleep
    - Pull sleep metrics from devices like Fitbit using their REST APIs via the `requests` library.
    - Schedule nightly import tasks with `cron` or Celery workers and persist data in a relational database.
Food
    - Provide a simple API endpoint for logging meals and nutrient macros.
    - Use third party APIs (e.g. USDA food data) to enrich entries through Python scripts.
Twitter
    - Fetch tweets and mentions using the Tweepy library and store them in a database.
Activity
    - Capture step counts or cycling data from wearable APIs and post it to the backend service.
Workouts
    - Accept workout sessions through a REST endpoint or parse export files from fitness apps.
Finance
    - Use webhooks or scraping scripts in Python to record purchases and spending.
Location
    - Send location check-ins from a mobile app to the backend for storage and analysis.
Media
    - Track played songs or articles read by integrating with services such as Spotify or Pocket.
Weather
    - Call weather APIs like OpenWeatherMap daily using Python and cache the results.
Productivity
    - Record commits, keystrokes or completed tasks through integrations with GitHub or editor plugins.
Events
    - Import calendar data using `ics` files or API calls and calculate time spent in events.
Health
    - Receive metrics such as weight or heart rate from health devices via vendor APIs.
Social
    - Monitor social media interactions through platform APIs and store them with timestamp metadata.
Air Quality
    - Query local air quality APIs periodically with Python and log the readings.
